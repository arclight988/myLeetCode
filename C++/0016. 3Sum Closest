class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int ans = 1e7;
        //lambda
        auto update = [&](int cur) {
            if (abs(cur - target) < abs(ans - target)) ans = cur;
        };
        for (int i = 0; i < n; i++){
            if (i > 0 and nums[i] == nums[i-1]) continue;
            int j = i + 1, k = n - 1;
            while (j < k){
                if (nums[i] + nums[j] + nums[k] == target) return target;
                update(nums[i] + nums[j] + nums[k]);
                if (nums[i] + nums[j] + nums[k] < target) {
                    int j0 = j + 1;
                    while (j0 < k and nums[j0] == nums[j0-1]) j0++;
                    j = j0;
                }
                if (nums[i] + nums[j] + nums[k] > target) {
                    int k0 = k - 1;
                    while (j < k0 and nums[k0] == nums[k0 + 1]) k0--;
                    k = k0;
                }
            }
        }
        return ans;
    }
};
